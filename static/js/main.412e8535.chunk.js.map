{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","react_default","a","createElement","className","src","concat","alt","CardList","cardsArray","robots","map","user","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","height","overflowY","border","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","state","_this2","fetch","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","components_SearchBox","components_Scroll","components_CardList","React","Component","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"8KAYeA,SAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,0CCMCY,EAZF,SAAAN,GAAuB,IAApBO,EAAoBP,EAApBO,GAAIC,EAAgBR,EAAhBQ,KAAMC,EAAUT,EAAVS,MAExB,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,yDACfH,EAAAC,EAAAC,cAAA,OAAKE,IAAG,wBAAAC,OAA0BR,EAA1B,iBAA6CS,IAAI,WACxDN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cAAMJ,EAAN,KACAE,EAAAC,EAAAC,cAAA,aAAKH,MCGGQ,EATE,SAAAjB,GAAc,IACvBkB,EADuBlB,EAAZmB,OACSC,IAAI,SAACC,GAC7B,OAAQX,EAAAC,EAAAC,cAACU,EAAD,CAAMC,IAAOF,EAAKd,GAAIA,GAAIc,EAAKd,GAAIC,KAAOa,EAAKb,KAAMC,MAAOY,EAAKZ,UAE3E,OAAQC,EAAAC,EAAAC,cAAA,WACLM,ICSUM,EAdG,SAAAxB,GAAmB,IAAjByB,EAAiBzB,EAAjByB,aACpB,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAChBH,EAAAC,EAAAC,cAAA,SACAC,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAWH,MCEGI,EATA,SAACC,GAChB,OACEpB,EAAAC,EAAAC,cAAA,OAAKmB,MAAO,CAACC,OAAO,QAAQC,UAAU,SAASC,OAAO,qBACpDJ,EAAMK,WCkCKC,qBAjCd,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAcFI,eAAgB,SAACC,GACfR,EAAKS,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAdzCZ,EAAKa,MAAQ,CACX/B,OAAQ,GACR4B,YAAa,IAJJV,mFAQK,IAAAc,EAAAX,KACjBY,MAAM,8CACLtD,KAAK,SAAAuD,GAAQ,OAAIA,EAASC,SAC1BxD,KAAK,SAAAyD,GAAK,OAAIJ,EAAKL,SAAS,CAAC3B,OAAQoC,uCAO9B,IAAAC,EAAAhB,KACAiB,EAAgBjB,KAAKU,MAAM/B,OAAOuC,OAAO,SAAAC,GAC7C,OAAOA,EAAMnD,KAAKoD,cAAcC,SAASL,EAAKN,MAAMH,YAAYa,iBAEpE,OACElD,EAAAC,EAAAC,cAAA,OAAKC,UAAW,MAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,MAAhB,iBACAH,EAAAC,EAAAC,cAACkD,EAAD,CAAWrC,aAAgBe,KAAKI,iBAChClC,EAAAC,EAAAC,cAACmD,EAAD,KACArD,EAAAC,EAAAC,cAACoD,EAAD,CAAU7C,OAAUsC,aA5BJQ,IAAMC,kBCEXC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7D,EAAAC,EAAAC,cAACF,EAAAC,EAAM6D,WAAP,KACD9D,EAAAC,EAAAC,cAAC6D,EAAD,QAODhF","file":"static/js/main.412e8535.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nconst Card = ({ id, name, email })=>{\n\n  return(\n  <div className = 'tc  bg-light-green dib br3  pa3 ma2 grow bw2 shadow-5'>\n    <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\"/>\n     <div >\n       <h4> {name} </h4>\n       <p> {email}</p>\n     </div>\n  </div>\n  )\n}\nexport default Card;\n","import React from  'react';\nimport Card from './Card';\nconst CardList = ({robots}) => {\n  const cardsArray = robots.map((user) => {\n    return  <Card key = {user.id} id={user.id} name ={user.name} email={user.email}/>\n  })\n  return (<div>\n    {cardsArray}\n  </div>)\n}\n\nexport default CardList\n","import React from 'react';\n\nconst SearchBox = ({searchChange}) =>{\nreturn (\n  <div className=\"pa2\" >\n <input\n className=\"pa3 ba b--green bg-lightest-blue\"\n type=\"search\"\n placeholder=\"Search Robots\"\n onChange= {searchChange}\n />\n\n </div>\n)\n}\n\nexport default SearchBox\n","\nimport React from 'react';\nconst Scroll = (props)=>{\nreturn   (\n  <div style={{height:\"800px\",overflowY:\"scroll\",border:'5 px solid black'}}>\n   {props.children}\n  </div>\n);\n\n};\n\nexport default Scroll;\n","import React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll'\nimport './App.css'\nclass App extends React.Component{\n constructor(){\n   super()\n   this.state = {\n     robots: [],\n     searchfield :''\n   }\n }\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({robots: users}));\n}\n\n\n onSearchChange =(event)=>{\n   this.setState({searchfield: event.target.value})\n }\n  render(){\n    const filteredRobots= this.state.robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n    })\n  return(\n    <div className= \"tc\" >\n  <h1 className = \"f1\"> Robo Friend </h1>\n  <SearchBox searchChange = {this.onSearchChange}/>\n  <Scroll>\n  <CardList robots = {filteredRobots}/>\n  </Scroll>\n    </div>\n );\n  }\n  }\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App'\nimport 'tachyons'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}